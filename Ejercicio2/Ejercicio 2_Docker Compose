---
Author: Epifanía Peralta López
Title: Ejercicio 2
---

# Ejercicio 2 - Docker Compose

> Documento que resuelve el ejercicio 2 de la Tarea 3- Despliegue de Aplicaciones Web, realizado por Epifanía Peralta López para Despliegue de Aplicaciones Web.

[TOC]

> Este ejercicio se puede resolver utilizando comandos, o Docker Desktop, o combinando ambos.

**Enunciado:** Explorar la imagen de la aplicación **FileBrowser** en este repositorio en GitHub: `https://hub.docker.com/r/hurlenko/filebrowser`.

> El usuario por defecto es **admin** con contraseña `admin`.

Escribir un fichero **compose.yaml** para desplegarla. Los datos se pueden guardar utilizando volúmenes o utilizando bind-mount.

Entregar, al menos, las siguientes capturas de pantalla y los comandos y/o operaciones con Docker Desktop empleados para resolver el ejercicio:

* Captura de pantalla y documento donde se vea el fichero **docker-compose.yaml** que has creado.

Al explorar la imagen indicada en Docker Hub, me informa de lo siguiente:

![filebrowser - Imagen de Docker | Docker Hub 2025-04-01 18-27-41](./Ejercicio%202_Docker%20Compose.assets/filebrowser%20-%20Imagen%20de%20Docker%20%7C%20Docker%20Hub%202025-04-01%2018-27-41.png)

Parto de esa información para escribir el **compose.yaml**.

*Descripción de los puertos*: el `8080` como puerto predeterminado del explorador de archivos.

*Variables de entorno admitidas:*

En la imagen explica que FileBrowser usa una base de datos interna llamada **Bolt DB** que es un archivo único administrado automáticamente por la aplicación, de forma que no se necesita configurar un servidor de base de datos externo (como MySQL) para que funcione. 

FileBrower tiene una interfaz de línea de comandos (CLI) con la que se puede:

1. Crear la base de datos
2. Gestionar usuarios.
3. Configurar opciones sin necesidad de entrar en la interfaz web.

Las variables de entorno llevan el prefijo "FB_" seguido por el nombre de la opción en mayúsculas. Así, para la "Database", la variable de entorno sería: FB_DATABASE.

Este es el fichero `docker-compose.yaml` creado:

![Monosnap compose.yaml — DespliegueTarea3 2025-04-01 19-31-38](./Ejercicio%202_Docker%20Compose.assets/Monosnap%20compose.yaml%20%E2%80%94%20DespliegueTarea3%202025-04-01%2019-31-38.png)

```yaml
version: '3.8'

services:
  filebrowser:
    image: hurlenko/filebrowser
    container_name: filebrowser_tarea3
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./filebrowser:/srv
    environment:
      - FB_USER=admin
      - FB_PASS=admin
    networks:
      - filebrowser_net

networks:
  filebrowser_net:
```



* Captura de pantalla donde se vean los volúmenes/ carpetas donde se han almacenado los datos.

Para el almacenamiento puedo usar Bind Mount para guardar los datos de forma persistente. Ubicación:

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20filebrowser%202025-04-07%2018-49-19.png" alt="Monosnap filebrowser 2025-04-07 18-49-19" style="zoom:33%;" />

* Pongo en marcha el servicio desde la carpeta Ejercicio2:

```bash
docker compose up -d
```

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20Ejercicio2%20%E2%80%94%20-zsh%20%E2%80%94%20131%C3%9744%202025-04-07%2019-09-05(1).png" alt="Monosnap Ejercicio2 — -zsh — 131×44 2025-04-07 19-09-05(1)" style="zoom:25%;" />

* Abro mi navegador en:

```bash
http://localhost:8080
```

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20Iniciar%20sesio%CC%81n%20-%20File%20Browser%202025-04-07%2019-11-47(1).png" alt="Monosnap Iniciar sesión - File Browser 2025-04-07 19-11-47(1)" style="zoom:25%;" />

* Inicio sesión y cambio el lenguaje a español:

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20Profile%20Settings%20-%20File%20Browser%202025-04-07%2019-14-56(1).png" alt="Monosnap Profile Settings - File Browser 2025-04-07 19-14-56(1)" style="zoom:25%;" />

* ¿Cómo funciona esta aplicación?

Filebrowser es una aplicación web que gestiona archivos y carpetas del sistema de archivos del contenedor a través de una interfaz gráfica accesible desde el navegador. De esa forma, fácilmente se pueden explorar los archivos y carpetas,  subir, descargar, renombrar, ... archivos/carpetas.

En mi caso he creado un Bind Mount, por lo que todo lo que FileBrowser gestione desde su interfaz se guardará en la carpeta `./filebrowser` de mi ordenador.

Voy a crear una carpeta llamada `Documentos` y dentro de ella el archivo `Tarea3`

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20Tarea3.txt%20-%20Archivos%20-%20File%20Browser%202025-04-07%2019-34-26.png" alt="Monosnap Tarea3.txt - Archivos - File Browser 2025-04-07 19-34-26" style="zoom:25%;" />

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20Documentos%20-%20Archivos%20-%20File%20Browser%202025-04-07%2019-38-30.png" alt="Monosnap Documentos - Archivos - File Browser 2025-04-07 19-38-30" style="zoom:25%;" />

Bien, a la hora de comprobar que efectivamente ha quedado ese documento guardado en `./filebrowser`, no lo hace.

En el contenedor, en **View configurations** figura:

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20ejercicio2%20-%20App%20-%20Docker%20Desktop%202025-04-07%2021-04-43.png" alt="Monosnap ejercicio2 - App - Docker Desktop 2025-04-07 21-04-43" style="zoom:25%;" />

De modo que Docker Desktop indica que está usando `/config/filebrowser.db` y no encuentra en ese directorio `/config/` del contenedor lo que busca.

La configuración predeterminada de la imagen de FileBrowser es utilizar el directorio `/config/` para almacenar la base de datos (`filebrowser.db`) y como esa ruta no la he indicado a la hora de montar el Bind Mount, el contenedor estará montando los archivos de configuración y la base de datos dentro del contenedor, pero no en mi máquina local.

La solución es modificar mi archivo `compose.yaml`:

```yaml
version: '3.8'

services:
  filebrowser:
    image: hurlenko/filebrowser
    container_name: filebrowser_tarea3
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./filebrowser:/srv	//para guardar los archivos gestionados por la aplicación web
      - ./config:/config		//para guardar la base de datos (filebrowser.db) y la configuración
    environment:
      - FB_USER=admin
      - FB_PASS=admin
    networks:
      - filebrowser_net

networks:
  filebrowser_net:
```

Y así, creo una nueva carpeta al mismo nivel que `compose.yaml` y que `/filebrowser/`  llamada `/config/` :

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20compose.yaml%20%E2%80%94%20DespliegueTarea3%202025-04-07%2021-13-58(1).png" alt="Monosnap compose.yaml — DespliegueTarea3 2025-04-07 21-13-58(1)" style="zoom:25%;" />

El siguiente paso es detener el contenedor y eliminarlo, para volver a crearlo con la nueva configuración:

```bash
docker compose down
docker compose up -d
```

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20Ejercicio2%20%E2%80%94%20-zsh%20%E2%80%94%20131%C3%9744%202025-04-07%2021-21-32.png" alt="Monosnap Ejercicio2 — -zsh — 131×44 2025-04-07 21-21-32" style="zoom:25%;" />

Sigue sin funcionar. Utilizando:

```bash
docker logs filebrowser_tarea3
```

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20Ejercicio2%20%E2%80%94%20-zsh%20%E2%80%94%20131%C3%9724%202025-04-07%2022-40-06(1).png" alt="Monosnap Ejercicio2 — -zsh — 131×24 2025-04-07 22-40-06(1)" style="zoom:33%;" />

Indica que el contenedor está ignorando mi volumen `./config:/config/` y no está utilizando esa ruta como ubicación de su base de datos, al no estar definido `--database /config/filebrowser.db`

Modifico el `compose.yaml` para incorporar en `command`:

```yaml
version: '3.8'

services:
  filebrowser:
    image: hurlenko/filebrowser
    container_name: filebrowser_tarea3
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./filebrowser:/srv
      - ./config:/config
    environment:
      - FB_USER=admin
      - FB_PASS=admin
    command: ["--root",  "/srv", "--database", "/config/filebrowser.db"]
    networks:
      - filebrowser_net

networks:
  filebrowser_net:

```

Y ahora ya funciona el almacenamiento.

He creado un archivo `Pruebas.txt` desde el FileBrowser y efectivamente ya lo almacena en el equipo:

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20srv%20-%20Archivos%20-%20File%20Browser%202025-04-07%2022-45-39.png" alt="Monosnap srv - Archivos - File Browser 2025-04-07 22-45-39" style="zoom:25%;" />

<img src="./Ejercicio%202_Docker%20Compose.assets/Monosnap%20filebrowser%202025-04-07%2022-46-12(1).png" alt="Monosnap filebrowser 2025-04-07 22-46-12(1)" style="zoom:25%;" />



> Documento realizado para Despliegue_Tarea3
